#BLOCO 1  - TIMES

#Dicionario dos times (serao compactados em uma funcao apos os testes):
jogadores_flamengo = {
    'Goleiro': [
        {'Nome': 'Diego Alves', 'Posicao':'Goleiro','Forca': 84, 'Idade': 36, 'Nacionalidade': 'Brasil'},
        {'Nome': 'Hugo Souza', 'Posicao':'Goleiro','Forca': 75, 'Idade': 23, 'Nacionalidade': 'Brasil'}
    ],
    'Lateral Direito': [
        {'Nome': 'Maurício Isla', 'Posicao':'Lateral Direito','Forca': 81, 'Idade': 33, 'Nacionalidade': 'Chile'},
        {'Nome': 'Rodinei', 'Posicao':'Lateral Direito','Forca': 75, 'Idade': 29, 'Nacionalidade': 'Brasil'}
    ],
    'Zagueiro': [
        {'Nome': 'Gustavo Henrique', 'Posicao':'Zagueiro','Forca': 78, 'Idade': 28, 'Nacionalidade': 'Brasil'},
        {'Nome': 'Bruno Viana', 'Posicao':'Zagueiro','Forca': 77, 'Idade': 26, 'Nacionalidade': 'Portugal'},
        {'Nome': 'Léo Pereira', 'Posicao':'Zagueiro','Forca': 75, 'Idade': 25, 'Nacionalidade': 'Brasil'}
    ],
    'Lateral Esquerdo': [
        {'Nome': 'Filipe Luís', 'Posicao':'Lateral Esquerdo','Forca': 82, 'Idade': 36, 'Nacionalidade': 'Brasil'}
    ],
    'Meio-Campo': [
        {'Nome': 'Willian Arão', 'Posicao':'Meio-Campo','Forca': 80, 'Idade': 29, 'Nacionalidade': 'Brasil'},
        {'Nome': 'Gerson', 'Posicao':'Meio-Campo','Forca': 83, 'Idade': 24, 'Nacionalidade': 'Brasil'},
        {'Nome': 'Everton Ribeiro', 'Posicao':'Meio-Campo','Forca': 82, 'Idade': 32, 'Nacionalidade': 'Brasil'},
        {'Nome': 'Arrascaeta', 'Posicao':'Meio-Campo','Forca': 84, 'Idade': 27, 'Nacionalidade': 'Uruguai'}
    ],
    'Atacante': [
        {'Nome': 'Gabigol', 'Posicao':'Atacante','Forca': 84, 'Idade': 25, 'Nacionalidade': 'Brasil'},
        {'Nome': 'Bruno Henrique', 'Posicao':'Atacante','Forca': 83, 'Idade': 31, 'Nacionalidade': 'Brasil'}
]
}


#Funcao para escolher o time:
def escolha_time(jogadores_flamengo):

    corinthans = list()
    flamengo = list()
    flamengo.append(jogadores_flamengo)

    seu_time = int(input('Escolha um time: [1] - Corinthans / [2] - Flamengo\n: '))
    seu_time_titular = dict()
    time_pc_titular = dict()

    if seu_time == 1:
        seu_time = corinthans
        time_pc = flamengo

    if seu_time == 2:
        seu_time = flamengo
        time_pc = corinthans

    return seu_time,seu_time_titular











#BLOCO 2 - UTILIDADES

#Funcao para definir esquemas taticos:
def esquemas_taticos(esquema_escolhido):

    seu_time_titular = dict()


    if esquema_escolhido == 1:
        seu_time_titular = {'Goleiro': {'Status': 'Vazio'}, 'Zagueiro Esquerdo': {'Status': 'Vazio'},
                            'Zagueiro Direito': {'Status': 'Vazio'},
                            'Lateral Esquerdo': {'Status': 'Vazio'}, 'Lateral Direito': {'Status': 'Vazio'},
                            'Meio-Campo 1': {'Status': 'Vazio'},
                            'Meio-Campo 2': {'Status': 'Vazio'}, 'Meio-Campo 3': {'Status': 'Vazio'},
                            'Meio-Campo 4': {'Status': 'Vazio'},
                            'Atacante Direito': {'Status': 'Vazio'}, 'Atacante Esquerdo': {'Status': 'Vazio'}}

    elif esquema_escolhido == 2:
        seu_time_titular = {
            'Goleiro': {'Status': 'Vazio'},
            'Zagueiro Esquerdo': {'Status': 'Vazio'},
            'Zagueiro Central 1': {'Status': 'Vazio'},
            'Zagueiro Central 2': {'Status': 'Vazio'},
            'Zagueiro Direito': {'Status': 'Vazio'},
            'Meio-Campo 1': {'Status': 'Vazio'},
            'Meio-Campo 2': {'Status': 'Vazio'},
            'Meio-Campo 3': {'Status': 'Vazio'},
            'Atacante Direito': {'Status': 'Vazio'},
            'Atacante Central': {'Status': 'Vazio'},
            'Atacante Esquerdo': {'Status': 'Vazio'}
        }

    elif esquema_escolhido == 3:

        seu_time_titular = {
            'Goleiro': {'Status': 'Vazio'},
            'Zagueiro Esquerdo': {'Status': 'Vazio'},
            'Zagueiro Central 1': {'Status': 'Vazio'},
            'Zagueiro Direito': {'Status': 'Vazio'},
            'Meio-Campo Esquerdo': {'Status': 'Vazio'},
            'Meio-Campo Central 1': {'Status': 'Vazio'},
            'Meio-Campo Central 2': {'Status': 'Vazio'},
            'Meio-Campo Central 3': {'Status': 'Vazio'},
            'Meio-Campo Direito': {'Status': 'Vazio'},
            'Atacante 1': {'Status': 'Vazio'},
            'Atacante 2': {'Status': 'Vazio'}
        }

    elif esquema_escolhido == 4:

        seu_time_titular = {
            'Goleiro': {'Status': 'Vazio'},
            'Zagueiro Esquerdo': {'Status': 'Vazio'},
            'Zagueiro Central 1': {'Status': 'Vazio'},
            'Zagueiro Central 2': {'Status': 'Vazio'},
            'Zagueiro Direito': {'Status': 'Vazio'},
            'Meio-Campo Defensivo 1': {'Status': 'Vazio'},
            'Meio-Campo Defensivo 2': {'Status': 'Vazio'},
            'Meio-Campo Central': {'Status': 'Vazio'},
            'Meio-Campo Ofensivo': {'Status': 'Vazio'},
            'Atacante': {'Status': 'Vazio'}
        }

    return seu_time_titular


#Funcao de escolha automatica do time titular
def escolha_automatica(seu_time):

    esquema_escolhido = escolha_esquema()
    seu_time_titular = esquemas_taticos(esquema_escolhido)

    # Incluindo o nome dos jogadores do time em uma lista para utilizar como validacao futuramente no codigo
    posicoes_preenchidas = list()
    jogadores_time = list()


    # Colocando o dicionario do jogador dentro do time titular:
    for posicao in seu_time:
        for key, value in posicao.items():
            for jogador in value:
                #Selecionando jogador da posicao correta para inserir:
                for posicao_vazia in seu_time_titular.keys():
                    if jogador['Posicao'] in posicao_vazia and jogador['Nome'] not in jogadores_time and posicao_vazia not in posicoes_preenchidas:
                        seu_time_titular[posicao_vazia] = jogador
                        #Colocando o jogador que ja esta no time em uma lista para nao repetir:
                        jogadores_time.append(jogador['Nome'])
                        posicoes_preenchidas.append((posicao_vazia))

    #Loop para preencher posicoes que ficaram vazias:
    for posicao_vazia,dicionario in seu_time_titular.items():
        for keys,values in dicionario.items():
            if values == ' Vazio':
                for posicao in seu_time:
                    for key, value in posicao.items():
                        for jogador in value:
                            if jogador['Nome'] not in jogadores_time and jogador['Posicao'] not in posicoes_preenchidas:
                                seu_time_titular[posicao_vazia] = jogador


    return seu_time_titular


#Funcao para mostrar o time completo (tela inicial do jogo):
def mostrar_time(seu_time):
    print('-' * 150)
    print(f'{"Jogadores":<20} {"Posicao":>20} {"Forca":>20}{"Idade":>20}{"Nacionalidade":>20}')  #Primeira linha da tabela
    print('-' * 150)

    for posicao in seu_time:    #Loop para mostrar o time formatado em tabela
        for key, value in posicao.items():
            for jogador in value:
                for caracteristica, valor in jogador.items():
                    print(f'{valor:>20}', end='')
                print()


# Funcao que inclui o nome dos jogadores do time em uma lista para utilizar como validacao futuramente no codigo:
def lista_controle(seu_time):

    jogadores_time = list()
    for posicao in seu_time:
        for key, value in posicao.items():
            for jogador in value:
                jogadores_time.append(jogador['Nome'])

    return jogadores_time


#Funcao que inclui o nome dos jogadores do time titular em uma lista para utilizar como validacao futuramente no codigo:
def lista_controle_titulares(seu_time_titular):

    lista_titulares = list()
    for posicoes, jogadores in seu_time_titular.items():
        lista_titulares.append(jogadores['Nome'])

    return lista_titulares


#Funcao que relaciona o nome do jogador digitado com o dicionario correspondente:
def sistema_subs(seu_time,seu_time_titular,jogador_novo,jogador_velho):

    for posicao in seu_time:
        for key, lista in posicao.items():
            for jogador in lista:
                if jogador_novo == jogador['Nome']:
                    jogador_novo = jogador

    for pos, jog in seu_time_titular.items():
        if jogador_velho == jog['Nome']:
            jogador_velho = jog


    return jogador_novo,jogador_velho


#Funcao que realiza a substituicao utilizando como parametro o sistema de substituicao:
def realiza_subs(seu_time_titular,jogador_novo,jogador_velho):



    for key,jogador in seu_time_titular.items():
        if jogador['Nome'] == jogador_velho['Nome']:
            seu_time_titular[key] = jogador_novo

    return seu_time_titular


#Funcao para mostrar o time titular:
def mostrando_time_titular(seu_time_titular):
    # Printando o time titular a cada entrada:
    print('TIME TITULAR')
    print('-' * 150)
    print(
        f'{"Posicao no Esquema":<20}{"Jogadores":>20} {"Posicao":>20} {"Forca":>20}{"Idade":>20}{"Nacionalidade":>20}')
    print('-' * 150)

    for item, value in seu_time_titular.items():
        print(f'{item:<20}', end='')
        for key, values in value.items():
            print(f'{values:>20}', end='')
        print()


